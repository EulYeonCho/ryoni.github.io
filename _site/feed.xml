<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-07-26T22:42:44+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">누구에게나 시간이 동일하게 흐르지는 않는다</title><subtitle>Tech and Life Blog</subtitle><author><name>Ryoni Cho</name><email>carpinus0@gmail.com</email></author><entry><title type="html">[개인프로젝트 기록] Tiny Island-02</title><link href="http://localhost:4000/development/Tiny-island-02/" rel="alternate" type="text/html" title="[개인프로젝트 기록] Tiny Island-02" /><published>2020-07-15T23:28:00+09:00</published><updated>2020-07-15T23:28:00+09:00</updated><id>http://localhost:4000/development/Tiny-island-02</id><content type="html" xml:base="http://localhost:4000/development/Tiny-island-02/">&lt;h1 id=&quot;1-진척사항&quot;&gt;1. 진척사항&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;호기롭게 블로그를 시작하였으나 근 한달만의 기록.&lt;/li&gt;
  &lt;li&gt;그렇다고 개발을 쉰건 아니니 다행.&lt;/li&gt;
  &lt;li&gt;6월 3일 이후 한달반동안 진행한 내역은 요정도다.(얼마안되네..)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/TellMe.JPG&quot; alt=&quot;한번 패를 까보세요&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하..
&lt;br /&gt;
&lt;br /&gt;
보여줄게 없다…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;em&gt;6월 6일부터 7월 15일까지의 커밋내용&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/0606-0715commit.png&quot; alt=&quot;열심히 한것 같았는데 커밋은 적다..주륵&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;주요내용만 적어보자면,
    &lt;ul&gt;
      &lt;li&gt;플레이어 공격 기본구현&lt;/li&gt;
      &lt;li&gt;몬스터 에셋추가 및 기본 AI구현&lt;/li&gt;
      &lt;li&gt;공격 및 타격 이펙트 추가/ Shader 수정&lt;/li&gt;
      &lt;li&gt;유니티 업데이트&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하하하하..&lt;/p&gt;

&lt;p&gt;하하하하..&lt;/p&gt;

&lt;p&gt;아 진짜 한것없는것같네. 더 열심히 해야지..&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;2-진척사항-세부내역-자-이제-자세히-뭘했는지-보자&quot;&gt;2. 진척사항 세부내역: 자 이제 자세히 뭘했는지 보자.&lt;/h1&gt;

&lt;h2 id=&quot;1-플레이어-공격-기본-구현&quot;&gt;1) 플레이어 공격 기본 구현&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;기본 공격구상&lt;/p&gt;

    &lt;p&gt;플레이어 공격은 예전에 구상했던데로 자동공격으로 이루어진다. 조이스틱을 움직이면 공격을 멈추고 이동하다가, 조이스틱을 떼게되면 공격애니메이션이 자동으로 재생된다. 게임자체가 한손조작으로 가능하게 해야하면서도 어느정도 컨트롤을 할수있게하려면 ‘회피’가 필요한데, 요 회피부분을 한손으로 구현하는게 마땅치가 않다. 결국 ‘궁수의전설’처럼 한손으로 이동하고 자동공격하여 공격중간 이동을 함으로 써 ‘컨트롤’이 가능하게 구현하였다. 아직은 이부분은 고민중이라서 ‘하얀고양이프로젝트’처럼 드래그시 이동 터치시 공격으로 변화될 여지는 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;공격-타격판정&lt;/p&gt;

    &lt;p&gt;이 부분도 많이 고민했는데, 무기에 콜라이더를 입혀서 충돌판정으로 할것인가 아니면 일정영역안의 공격영역을 잡고 애니메이션에 맞춰서 타격판정을 할것인가에 대한 두가지 방법이 있었다. 전자는 좀더 미세한 컨트롤이 요구되는 게임에 맞을것이고 좀더 캐주얼한게임이라면 후자의 방법으로도 충분할것이다. 일단은 후자의 방법으로 진행하기로했다. 아직 보스전이나 다른 여타의 전투구상은 되지않은상태이지만 모바일이라는 플랫폼의 한계상 미세한 컨트롤은 애초에 불가능할것같기에 추후에도 내가 컨트롤이 용이한 방법을 사용하는편이 좋을것으로 사료되었다.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/images/playerAttack.GIF&quot; alt=&quot;기본공격구현된것&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-몬스터-에셋-추가-및-기본-ai구현&quot;&gt;2) 몬스터 에셋 추가 및 기본 AI구현&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;몬스터 에셋은 에셋스토어에서 구입한 &lt;a href=&quot;https://assetstore.unity.com/packages/3d/characters/creatures/rpg-monster-wave-polyart-157652&quot;&gt;RPG monster wave poly art&lt;/a&gt;를 사용했다.&lt;/li&gt;
  &lt;li&gt;빠른 게임 구현을 위해서는 에셋스토어에셋을 적극적으로 활용하는것이 좋을것같다. 이 에셋은 여러가지 몬스터모델과 애니메이션 그리고 원본파일이 제공되는 점이 마음에 들었다. 예전에 블렌더로 혼자 만들어본 몬스터의 조악성과 비교하면 에셋스토어 만세다!&lt;/li&gt;
  &lt;li&gt;AI는 행동트리를 사용해볼까하는 생각을 해보았지만(공부를 위해서), 가장익숙한 FSM을 사용해서 룰베이스로 AI를 만들었다. 유니티 3d kit에 들어있는 Target Distributor가 꽤나 쓸모있었다. 그냥 동일한 몬스터를 구현하면 개떼처럼 플레이어를 공격하기 마련인데 플레이어에 붙을수있는 몬스터숫자를 제한하고 그 수가 차게되면 뒤에서 몬스터들이 관망하게 할수있게하여 어느정도 어색함과 난이도를 잡을수있었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-공격-및-타격-이펙트-추가&quot;&gt;3) 공격 및 타격 이펙트 추가&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이건 많은건 한게없다. &lt;a href=&quot;https://assetstore.unity.com/packages/vfx/shaders/toony-colors-pro-2-8105&quot;&gt;Toony Color Pro2 Shader&lt;/a&gt;라는 꽤나 유용한 쉐이더를 에셋스토어에서 구매하여 사용하고있기에 별다르게 만질것없었다.&lt;/li&gt;
  &lt;li&gt;다만 림라이트 부분에 커스터마이징이 가능하지않게 구현되어있었기에 요부분만 수정해서 피격시 림라이트수치를 조정할수있게 하였다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-유니티-업데이트&quot;&gt;4) 유니티 업데이트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;최대한 최신버전을 사용하고자하였긴 하지만 어느정도 안정된후에의 업데이트는 지양하고자한다.&lt;/li&gt;
  &lt;li&gt;하지만 Catalina업데이트 이후에 에디터가 중간에 멈춰버리는 이슈가있어서 이를 리포팅해보니 2019.4버전에서 픽스되었다는것을
알수있었다. 울며겨자먹기로 결국 업데이트하였다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/UnityError.PNG&quot; alt=&quot;유니티 2019버전+카탈리나사용시 에디터가 멈추는 현상&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://issuetracker.unity3d.com/issues/macos-inconsistent-crash-in-objc-msgsend-when-previewing-animations-with-animator-window-open&quot;&gt;이슈트래커링크: &lt;/a&gt;이 에러는 맥OS 카탈리나 환경에서 유니티 2019에디터에서 발생할수있는 현상으로 애니메이터를 열어두고 플레이시 발생한다. 참고로 유니티종료도 어려운 프리징상태가된다. 2019.4부터 수정되었다고한다.(그런데 2020에서 또 이슈가 재현…)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;혹시라도 이 에러로 고생중이시면 유니티 업데이트를 고려해보심이..&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-마치며&quot;&gt;3. 마치며&lt;/h1&gt;
&lt;p&gt;생각보다 개발이 더딘것같다. 3D프로젝트는 항상 하고싶은것인데, 하다가보면 내 능력의 한계에 계속 부딫히는것같다. 지금 회사에서 하는 프로젝트도 2D프로젝트이기도하고, 실무자라고하기엔 너무 3D프로젝트를 겪어보지못한 나의 부족함이 원인일지도..
그래도 꾸역꾸역 하는게 중요한데 이번에는 용두사미로 끝내지말고 어쨌든 출시를 꼭해보는 방향으로 가보자. 제발.&lt;/p&gt;</content><author><name>Ryoni Cho</name><email>carpinus0@gmail.com</email></author><category term="tinyisland" /><category term="unity" /><category term="game" /><summary type="html">1. 진척사항 호기롭게 블로그를 시작하였으나 근 한달만의 기록. 그렇다고 개발을 쉰건 아니니 다행. 6월 3일 이후 한달반동안 진행한 내역은 요정도다.(얼마안되네..)</summary></entry><entry><title type="html">[개인프로젝트 기록] Tiny Island-01</title><link href="http://localhost:4000/development/Tiny-island-01/" rel="alternate" type="text/html" title="[개인프로젝트 기록] Tiny Island-01" /><published>2020-06-03T23:32:00+09:00</published><updated>2020-06-03T23:32:00+09:00</updated><id>http://localhost:4000/development/Tiny-island-01</id><content type="html" xml:base="http://localhost:4000/development/Tiny-island-01/">&lt;h1 id=&quot;1tiny-island-project&quot;&gt;1.Tiny Island Project?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;일단 모바일 게임 프로젝트이다. AOS/iOS 모두 출시예정이다&lt;/li&gt;
  &lt;li&gt;모바일게임 특성상 조작이 불편하기에 &lt;strong&gt;한손조작&lt;/strong&gt;을 택했다.&lt;/li&gt;
  &lt;li&gt;내가 좋아하는 콘솔게임은 거의 위쳐/젤다의전설과같은 스토리가 가미된 RPG게임이라고 정리할수있다. 모바일게임은 정말 왠만해서는 즐겨하지않기에 나도 즐길수있는 모바일게임을 목표로 만들기시작한다.&lt;/li&gt;
  &lt;li&gt;스토리는 다크소울이나 블러드본과같이 불친절한 스토리보다는 &lt;strong&gt;선형적이고 쉬운 스토리&lt;/strong&gt;가 좋더라. 메인스토리는 굵고 진하게 있으면서 서브스토리에서 자유도를 주는게 내 취향이기에 요렇게 만들어보고자한다.&lt;/li&gt;
  &lt;li&gt;개발지향성은 가볍게 빨리 만들어서 빠르게 출시하자인데, 요건 조금 오래걸릴것같긴하다. &lt;strong&gt;RPG를 만든다는건 진짜 어려운일&lt;/strong&gt;이다.
    &lt;blockquote&gt;
      &lt;ul&gt;
        &lt;li&gt;아트스타일은 &lt;strong&gt;스타일이라고 할것도없다.&lt;/strong&gt; 거의 에셋스토어에서 구매해서 조정하는식으로 가야할것같다. 다음번에는 2D 도트스프라이트를 도전하기로하고 이번에는 꼭 해보고싶어서 계속 도전했지만 매번 접었던 &lt;strong&gt;3D 로우폴리곤 스타일 게임&lt;/strong&gt;을 만들어보고자한다.&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2진척사항은&quot;&gt;2.진척사항은?&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;2020년 6월 현재, 프로젝트생성한지는 두달정도된것같다. 겁나빠르네&lt;/li&gt;
  &lt;li&gt;현재 유니티 기본터레인으로 가장 기본이되는 섬을 60%정도 만들었다.&lt;/li&gt;
  &lt;li&gt;Triplanar Shader를 통해 절벽과 평지를 자연스럽게 블렌딩하게하고, 터레인 모델링이 완성되면 이를 mesh로 변환하여 유니티 polybrush를 통해 버텍스컬러를 칠해서 평지의 길등을 블렌딩하려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tiny01.png&quot; alt=&quot;기본 세로 한손모드로 섬에서 펼쳐지는 이야기&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;현재개발스크린샷. 섬에서 펼쳐지는 이야기.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;grass도 잘 넣고싶은데 지오메트리쉐이더를 통해서 풀을 만들고싶었는데 ios metal에서는 이 쉐이더가 작동이 안되는것같다.. 결국 그냥 mesh를 c#에서 조정해서 만들어봤다. 요건 계속 조정해봐야할듯.&lt;/li&gt;
  &lt;li&gt;캐릭터 이동은 에셋스토어에서 사서 써봤다. 게속 캐릭터컨트롤러 혼자서 만들어서 썼었는데 굴곡있는 지형에서 갑자기 뚫고내려간다던가, 경사에서 붙어버린다던가 하는 버그가 계속있어서 스트레스.. 역시 잘만든 코드 가져다 쓰는게 최고긴하다. 잘된다. 나중에 요 코드 공부해서 내것으로 만들긴해야지. (사용한 에셋은 다음과같다:&lt;a href=&quot;https://assetstore.unity.com/packages/tools/physics/character-movement-fundamentals-144966&quot;&gt;Character Controller Fundamentals&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;카메라 워크는 역시 유니티에서 제공하는 시네머신을 사용했다. 빠르게 만드는게 중요하다.
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/tiny02.png&quot; alt=&quot;모델링도 커스터마이징이 필요하다&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;모델링도 커스터마이징해야한다. 일단synty studio 에서 받은 에셋을 사용중이다&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;3해야할것들&quot;&gt;3.해야할것들&lt;/h1&gt;
&lt;p&gt;아직 엄청 많다. 큰 골격으로 조만간해야할것들은 다음과같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;기본적인 전투기획. 어떻게 공격하고 회피하고 할지 정하지못했다.&lt;/li&gt;
  &lt;li&gt;적 AI구현. 일단 단순 스테이트머신이아니라 행동트리로 구현하기로 결정.&lt;/li&gt;
  &lt;li&gt;퀘스트 구조 짜기.&lt;/li&gt;
  &lt;li&gt;컷씬 및 이벤트 관련 매니저.&lt;/li&gt;
  &lt;li&gt;아트적인건 거의 다 스토어에서 살거긴하지만, 조금씩 조정하려면..&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;
&lt;p&gt;암튼 엄청 많다. 몇달은 걸릴것같은 장기프로젝트이다.
다음달에 각을 봐서 프로토타입을 일단 만들고 출시일을 설정해야겠다.&lt;/p&gt;

&lt;h1 id=&quot;4오늘-한것&quot;&gt;4.오늘 한것.&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;오늘은 데이터 매니저를 만들었다.&lt;/li&gt;
  &lt;li&gt;기본적으로 게임데이터를 파일에 쓰고 읽는 역할과 씬간 이동시 데이터를 가지고있는 매니저이다.&lt;/li&gt;
  &lt;li&gt;씬전환시 모든 데이터를 세이브하고 씬로드후에 다시 모든데이터를 로드하며, 파일로 쓰고 읽는건 Easy Save 에셋을 활용하였다. 데이터클래스들은 interface를 상속하였고 이 인터페이스들을  데이터매니저가 hashset/dictionary로 관리한다. 유니티 2d kit 코드를 많이 참고하였다.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;관련 코드예제.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-c# highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IStayableData&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DataSetting&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataPermission&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;permissionType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SaveData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Data&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DataManager&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SingletonBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;


    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dicData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dictionary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IStayableData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hsStaybleData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IStayableData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Awake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Awake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;Destroy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gameObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nf&quot;&gt;DontDestroyOnLoad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gameObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IStayableData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;IsNullOrEmpty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;hsStaybleData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;UnRegister&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IStayableData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hsStaybleData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ClearRegisers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;hsStaybleData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SaveAllData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hsStaybleData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;SaveData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SaveData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IStayableData&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataPermission&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;dicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;SaveData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadAllData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hsStaybleData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataPermission&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataPermission&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteOnly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ContainsKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;Debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LoadData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetDataSetting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
           
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;SavePlayerDataAtFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;SaveAllData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ContainsKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Player&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                       &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Player&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;ES3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlayerData&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Save/testPlayer.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LoadPlayerDataFromFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileNum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playerData&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ES3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlayerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PlayerData&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Save/testPlayer.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dicData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Player&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;playerData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Ryoni Cho</name><email>carpinus0@gmail.com</email></author><category term="tinyisland" /><category term="unity" /><category term="game" /><summary type="html">1.Tiny Island Project? 일단 모바일 게임 프로젝트이다. AOS/iOS 모두 출시예정이다 모바일게임 특성상 조작이 불편하기에 한손조작을 택했다. 내가 좋아하는 콘솔게임은 거의 위쳐/젤다의전설과같은 스토리가 가미된 RPG게임이라고 정리할수있다. 모바일게임은 정말 왠만해서는 즐겨하지않기에 나도 즐길수있는 모바일게임을 목표로 만들기시작한다. 스토리는 다크소울이나 블러드본과같이 불친절한 스토리보다는 선형적이고 쉬운 스토리가 좋더라. 메인스토리는 굵고 진하게 있으면서 서브스토리에서 자유도를 주는게 내 취향이기에 요렇게 만들어보고자한다. 개발지향성은 가볍게 빨리 만들어서 빠르게 출시하자인데, 요건 조금 오래걸릴것같긴하다. RPG를 만든다는건 진짜 어려운일이다. 아트스타일은 스타일이라고 할것도없다. 거의 에셋스토어에서 구매해서 조정하는식으로 가야할것같다. 다음번에는 2D 도트스프라이트를 도전하기로하고 이번에는 꼭 해보고싶어서 계속 도전했지만 매번 접었던 3D 로우폴리곤 스타일 게임을 만들어보고자한다.</summary></entry><entry><title type="html">[Covid19] 상상하는 그대로 그려보고싶다.</title><link href="http://localhost:4000/arts/drawing-thought/" rel="alternate" type="text/html" title="[Covid19] 상상하는 그대로 그려보고싶다." /><published>2020-06-02T00:56:00+09:00</published><updated>2020-06-02T00:56:00+09:00</updated><id>http://localhost:4000/arts/drawing-thought</id><content type="html" xml:base="http://localhost:4000/arts/drawing-thought/">&lt;h3 id=&quot;코로나19가-빨리-끝나길-바라며&quot;&gt;코로나19가 빨리 끝나길 바라며&lt;br /&gt;&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/covid19.PNG&quot; alt=&quot;GetLostCovid19&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프로크리에이트로 작업&lt;/li&gt;
  &lt;li&gt;클래스101 수업하나를 들으면서 작업한결과물&lt;/li&gt;
  &lt;li&gt;좀 다른느낌을 주고싶어서 여러가지를 넣어봤다&lt;/li&gt;
  &lt;li&gt;마스크 좀 그만쓰고 싶다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그림그리기는 내 가장 오래된 취미인데, 가장 자신없는 취미이기도하다.
항상 원패턴으로 얼굴만 그리면서 자아도취에 빠지던 그런 아이였다.
좀더 스토리에 집중하면서 다양하게 그리는 연습을 했다면.
더 좋은 그림을 그릴수있지않았을까&lt;/p&gt;

&lt;p&gt;그래도 지금이라도 즐겁게 그릴수있으면 만족한다.&lt;/p&gt;</content><author><name>Ryoni Cho</name><email>carpinus0@gmail.com</email></author><category term="Procreate" /><category term="Drawing" /><summary type="html">코로나19가 빨리 끝나길 바라며</summary></entry><entry><title type="html">Markdown 에디터로서의 노션 테스트</title><link href="http://localhost:4000/development/markdown-test/" rel="alternate" type="text/html" title="Markdown 에디터로서의 노션 테스트" /><published>2020-06-01T22:45:00+09:00</published><updated>2020-06-01T22:45:00+09:00</updated><id>http://localhost:4000/development/markdown-test</id><content type="html" xml:base="http://localhost:4000/development/markdown-test/">&lt;p&gt;마크다운에디터로서 노션이 얼마나 쓸만한지 테스트해보는 포스팅입니다.&lt;/p&gt;

&lt;p&gt;현재 이 포스팅은 모두 노션으로 쓰여졌습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이러한 리스트들도 마크다운문법에 맞게 -를 타이핑하면 자동으로 생성이됩니다.&lt;/li&gt;
  &lt;li&gt;훨씬 보기는 쉬운데 이게 Export가 잘 될지는 미지수입니다.&lt;/li&gt;
  &lt;li&gt;일단 써보고는 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;번호로 적는 리스트도 잘되는군요&lt;/li&gt;
  &lt;li&gt;라이브로 보인다는게 강점이긴합니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Code Snippet Test&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;python Code역시 잘됩니다&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;라인도 잘되는군요.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;별하나&lt;/em&gt;는 이탤릭체&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;별두개&lt;/strong&gt;는 볼드체&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;별세개&lt;/em&gt;&lt;/strong&gt;는 이탤릭에 볼드체가 표시됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;강조표시&lt;/code&gt; 도 잘되네요.&lt;/p&gt;

&lt;p&gt;&lt;del&gt;물결표시하면취소선&lt;/del&gt;&lt;/p&gt;

&lt;ul class=&quot;task-list&quot;&gt;
  &lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; class=&quot;task-list-item-checkbox&quot; disabled=&quot;disabled&quot; /&gt;체크박스[ ]&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;샾1개-띄어쓰기할때-헤딩&quot;&gt;샾1개 띄어쓰기할때 헤딩&lt;/h1&gt;

&lt;h2 id=&quot;샾2개-띄어쓰기-할때-헤딩&quot;&gt;샾2개 띄어쓰기 할때 헤딩&lt;/h2&gt;

&lt;h3 id=&quot;샾3개-띄어쓰기할때-헤딩&quot;&gt;샾3개 띄어쓰기할때 헤딩&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;토글리스트는 &amp;gt;요거 치고 스페이스파면됩니다(원래마크다운하고 다릅니다)&lt;/p&gt;

    &lt;p&gt;토글리스트 자녀1&lt;/p&gt;

    &lt;p&gt;토글리스트 자녀2&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;큰따옴표 쓰고 띄어쓰기하면 Quote Block이 나옵니다.(요거도다르네요)
계속 이렇게 쓸수도 있네요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;링크는 안되는건가?&lt;/p&gt;

&lt;p&gt;[링크테스트] &lt;a href=&quot;https://blog.naver.com/comtionzero&quot;&gt;https://blog.naver.com/comtionzer&lt;/a&gt;o/&lt;/p&gt;</content><author><name>Ryoni Cho</name><email>carpinus0@gmail.com</email></author><category term="Notion" /><category term="Markdown" /><summary type="html">마크다운에디터로서 노션이 얼마나 쓸만한지 테스트해보는 포스팅입니다.</summary></entry><entry><title type="html">github 블로그 첫 포스팅</title><link href="http://localhost:4000/development/first-post/" rel="alternate" type="text/html" title="github 블로그 첫 포스팅" /><published>2020-06-01T15:48:00+09:00</published><updated>2020-06-01T15:48:00+09:00</updated><id>http://localhost:4000/development/first-post</id><content type="html" xml:base="http://localhost:4000/development/first-post/">&lt;p&gt;깃허브블로그에 jekyll을 활용한 블로그 포스팅 테스트입니다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;마크다운문법&lt;/code&gt;을 활용해 좀 더 정돈된
글을 쓸수있습니다. 일단 테스트삼아 올려봅니다.&lt;/p&gt;

&lt;p&gt;익숙해지는데 조금 시간이 걸리겠지만, 한번 사용해보기로!!&lt;/p&gt;

&lt;p&gt;코드블록은 요렇게 사용한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello Github Blog&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;마크다운에 익숙해져야 편하게 쓰긴하겠네요!
&lt;a href=&quot;https://nolboo.kim/blog/2013/09/07/john-gruber-markdown/&quot;&gt;존크루버 마크다운번역페이지&lt;/a&gt;를 참고해서 공부가 필요!&lt;/p&gt;</content><author><name>Ryoni Cho</name><email>carpinus0@gmail.com</email></author><summary type="html">깃허브블로그에 jekyll을 활용한 블로그 포스팅 테스트입니다. 마크다운문법을 활용해 좀 더 정돈된 글을 쓸수있습니다. 일단 테스트삼아 올려봅니다.</summary></entry></feed>